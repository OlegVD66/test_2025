// @strict-types

#Область ОбработчикиСобытийФормы

	// При создании на сервере.
	// 
	// Параметры:
	//  Отказ - Булево - Отказ
	//  СтандартнаяОбработка - Булево - Стандартная обработка
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КоличествоМесяцев = КоличествоМесяцевМеждуДатами(Объект.ДатаНачала, Объект.ДатаОкончания);
	СтандартнаяОбработка = Истина;
КонецПроцедуры

	// При открытии.
	// 
	// Параметры:
	//  Отказ - Булево - Отказ
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КоличествоМесяцев = КоличествоМесяцевМеждуДатами(Объект.ДатаНачала, Объект.ДатаОкончания);
	Если Объект.ЭтоДополнительноеСоглашение Тогда
		Элементы.СвязанныйДоговор.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Сформировать(Команда)
	СФормироватьДоговор();
КонецПроцедуры
#КонецОбласти

#Область ПолучениеНаСервере
// Получить адрес на сервере.
// 
// Параметры:
//  ФИОРеб - СправочникСсылка.Дети - ФИОРеб
// 
// Возвращаемое значение:
//  Неопределено - Получить адрес на сервере
&НаСервереБезКонтекста
Функция ПолучитьАдресНаСервере(Знач ФИОРеб)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Дети.Адрес КАК Адрес
	|ИЗ
	|	Справочник.Дети КАК Дети
	|ГДЕ
	|	Дети.Ссылка = &ФИОРебенка";
	
	Запрос.УстановитьПараметр("ФИОРебенка", ФИОРеб);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Адрес;
	КонецЕсли;
КонецФункции 

&НаСервереБезКонтекста
Функция ПолучитьФИОРодителяНаСервере(Знач ФИОРеб)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	Дети.ФИОРодителя КАК ФИОРодителя
				   |ИЗ
				   |	Справочник.Дети КАК Дети
				   |ГДЕ
				   |	Дети.Ссылка = &ФИОРебенка";

	Запрос.УстановитьПараметр("ФИОРебенка", ФИОРеб);

	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ФИОРодителя;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтоимостьНаСервере(Знач НаимДОП)
	РегЦеныНаДопУслуги = РегистрыСведений.ЦеныНаДопУслуги.ПолучитьПоследнее(ТекущаяДатаСеанса(),
	Новый Структура ("ДополнительнаяОбщеобразовательнаяПрограмма", НаимДОП.Владелец));
	Возврат РегЦеныНаДопУслуги.ТарифЗаОдноЗанятие;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКоличествоЧасовВНеделю(Знач НаимДОП)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПлатныеУслуги.КоличествоЧасовВНеделю КАК КоличествоЧасовВНеделю
	|ИЗ
	|	Справочник.ПлатныеУслуги КАК ПлатныеУслуги
	|ГДЕ
	|	ПлатныеУслуги.Ссылка = &НаименованиеДОП";
	
	Запрос.УстановитьПараметр("НаименованиеДОП", НаимДОП);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.КоличествоЧасовВНеделю;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьФормуОбученияНаСервере(Знач НаимДОП)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПлатныеУслуги.ФормаОбучения.Ссылка КАК ФормаОбучения
	|ИЗ
	|	Справочник.ПлатныеУслуги КАК ПлатныеУслуги
	|ГДЕ
	|	ПлатныеУслуги.Ссылка = &НаименованиеДОП";
	
	Запрос.УстановитьПараметр("НаименованиеДОП", НаимДОП);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ФормаОбучения;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьНаправленностьНаСервере(Знач НаимДОП)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПлатныеУслуги.ВидУровеньНаправленностьДОП КАК Направленность
	|ИЗ
	|	Справочник.ПлатныеУслуги КАК ПлатныеУслуги
	|ГДЕ
	|	ПлатныеУслуги.Ссылка = &НаименованиеДОП";
	
	Запрос.УстановитьПараметр("НаименованиеДОП", НаимДОП);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Направленность;
	КонецЕсли;
КонецФункции
#КонецОбласти

#Область ОбработчикиСобытий

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ФИОРебенкаПриИзменении(Элемент)
	Объект.Адрес = ПолучитьАдресНаСервере(Объект.ФИОРебенка);
	Объект.ФИОРодителя = ПолучитьФИОРодителяНаСервере(Объект.ФИОРебенка);
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура ТабДокНаименованиеДОППриИзменении(Элемент)
	Если Объект.ТабДок.Количество() > 0 Тогда
		Для Каждого Строка Из Объект.ТабДок Цикл
			НаимДОП = Строка.НаименованиеДОП;          
			ФормаОбучения = ПолучитьФормуОбученияНаСервере(НаимДОП);
			Направленность = ПолучитьНаправленностьНаСервере(НаимДОП);
			Стоимость = ПолучитьСтоимостьНаСервере(НаимДОП);
			КоличествоЧасовВНеделю = ПолучитьКоличествоЧасовВНеделю(НаимДОП);
			Строка.ФормаОбучения = ФормаОбучения;
			Строка.Направленность = Направленность;
			Строка.СтоимостьОдногоЗанятия = Стоимость;
			Строка.КоличествоЧасовВНеделю = КоличествоЧасовВнеделю;
		КонецЦикла;
	Иначе
		Сообщить("Список пуст.");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	КоличествоМесяцев = КоличествоМесяцевМеждуДатами(Объект.ДатаНачала, Объект.ДатаОкончания);
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	КоличествоМесяцев = КоличествоМесяцевМеждуДатами(Объект.ДатаНачала, Объект.ДатаОкончания);
КонецПроцедуры


&НаКлиенте
Процедура ЭтоДополнительноеСоглашениеПриИзменении(Элемент)
    Если Объект.ЭтоДополнительноеСоглашение = Истина Тогда
		Элементы.СвязанныйДоговор.Видимость = Истина;
	Иначе
		Объект.СвязанныйДоговор = Неопределено;
		Элементы.СвязанныйДоговор.Видимость = Ложь;	
	КонецЕсли;    
КонецПроцедуры
#КонецОбласти

#Область РаботаСоСтроками
&НаСервере
Функция ЧислоПрописьюБезНоля(Стоимость)
	СтрокаПрописью = ЧислоПрописью(Стоимость, "ДП = Истина", НСтр("ru='рубль, рубля, рублей, м'"));
	СтрокаПрописью = СтрокаОбрезатьСправа(СтрокаПрописью, 5);
	Возврат СтрокаПрописью;
КонецФункции

&НаСервере
Функция СтрокаОбрезатьСправа(Строка, КоличествоСимволов)
	Возврат Лев(Строка, СтрДлина(Строка) - КоличествоСимволов);
КонецФункции

&НаСервере
Функция ПреобразоватьФИО(ФИО)
	МассивФИО = СтрРазделить(ФИО, " ");
	Если МассивФИО.Количество() = 3 Тогда
		Фамилия = МассивФИО[0];
		Имя = Лев(МассивФИО[1], 1) + ".";
		Отчество = Лев(МассивФИО[2], 1) + ".";
		Возврат Имя + Отчество + " " + Фамилия;
	ИначеЕсли МассивФИО.Количество() = 2 Тогда
		
		Фамилия = МассивФИО[0];
		Имя = Лев(МассивФИО[1], 1) + ".";
		Возврат Имя + " " + Фамилия;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

&НаСервере
Функция СтрокаРазделить(Строка, Разделитель)
	Массив = Новый Массив;
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Массив.Добавить(Лев(Строка, Позиция - 1));
		Строка = Сред(Строка, Позиция + 1);
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	Массив.Добавить(Строка);
	Возврат Массив;
КонецФункции
#КонецОбласти

&НаСервере
Функция КоличествоМесяцевМеждуДатами(ДатаНачала, ДатаОкончания)
	Если НЕ ТипЗнч(ДатаНачала) = Тип("Дата") ИЛИ НЕ ТипЗнч(ДатаОкончания) = Тип("Дата") Тогда
		Возврат Неопределено;
	КонецЕсли;
	Если ДатаОкончания < ДатаНачала Тогда
		Возврат Неопределено;
	КонецЕсли;
	КоличествоМесяцев = (Год(ДатаОкончания) - Год(ДатаНачала)) * 12 + 
	(Месяц(ДатаОкончания) - Месяц(ДатаНачала));
	Если День(ДатаОкончания) >= День(ДатаНачала) Тогда
		КоличествоМесяцев = КоличествоМесяцев + 1;
	КонецЕсли;
	Возврат КоличествоМесяцев;
КонецФункции

&НаСервере
Процедура ЗаполнитьПлатныеУслугиНаСервере(Знач ФИОРебенка)
	Ребенок = ФИОРебенка;
	ТаблицаУслуг = Ребенок.ПосещаемыеДОП;
	Объект.ТабДок.Очистить();
	Для Каждого СтрокаУслуги Из ТаблицаУслуг Цикл
		НоваяСтрока = Объект.ТабДок.Добавить();
		НоваяСтрока.НаименованиеДОП = СтрокаУслуги.НаименованиеДОП;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьДоговор()
	// Получаем нужный макет договора
	Если ПустаяСтрока(Объект.ФИОРебенка) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Укажите ФИО ребенка для формирования договора на оказание платных услуг'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если Объект.ТабДок.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Укажите хотя бы одну ДОП для формирования договора на оказание платных услуг ребенку'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если Объект.ТабДок.Количество() = 1 Тогда
		Договор = РеквизитФормыВзначение("Объект").ПолучитьМакет("Договор1");
	КонецЕсли;
	Если Объект.ТабДок.Количество() = 2 Тогда
		Договор = РеквизитФормыВзначение("Объект").ПолучитьМакет("Договор2");
	КонецЕсли;
	
	Попытка
		// Получаем объект Word из макета
		MSWord = Договор.Получить();
		Документ = MSWord.Application.Documents(1);
		
		// Получаем данные из первой строки табличной части
		ПерваяСтрока = Объект.ТабДок[0];
		НаименованиеДОП1 = ПерваяСтрока.НаименованиеДОП;
		ФормаОбучения1 = ПерваяСтрока.ФормаОбучения;
		Направленность1 = ПерваяСтрока.Направленность;
		Стоимость1 = ПерваяСтрока.СтоимостьОдногоЗанятия;
		КоличествоЧасовВНеделю1 = ПерваяСтрока.КоличествоЧасовВНеделю;
		КоличествоМесяцев = КоличествоМесяцевМеждуДатами(Объект.ДатаНачала, Объект.ДатаОкончания);
		ПреобразованноеФИО = ПреобразоватьФИО(Объект.ФИОРодителя);
		// Рассчитываем значения для первой строки
		ЧасовВГод1 = КоличествоЧасовВНеделю1 * КоличествоМесяцев * 4;
		СуммаВМесяц1 = Стоимость1 * КоличествоЧасовВНеделю1 * 4;
		СуммаВГод1 = Стоимость1 * ЧасовВГод1;
		
		// Если есть вторая строка - получаем ее данные
		Если Объект.ТабДок.Количество() = 2 Тогда
			ВтораяСтрока = Объект.ТабДок[1];
			НаименованиеДОП2 = ВтораяСтрока.НаименованиеДОП;
			ФормаОбучения2 = ВтораяСтрока.ФормаОбучения;
			Направленность2 = ВтораяСтрока.Направленность;
			Стоимость2 = ВтораяСтрока.СтоимостьОдногоЗанятия;
			КоличествоЧасовВНеделю2 = ВтораяСтрока.КоличествоЧасовВНеделю;
			
			ЧасовВГод2 = КоличествоЧасовВНеделю2 * КоличествоМесяцев * 4;
			СуммаВМесяц2 = Стоимость2 * КоличествоЧасовВНеделю2 * 4;
			СуммаВГод2 = Стоимость2 * ЧасовВГод2;
		КонецЕсли;
		
		СписокЗамен = Новый Массив;
		СписокЗамен.Добавить("<FIOParent>;" + Объект.ФИОРодителя);
		СписокЗамен.Добавить("<Date>;" + Формат(ТекущаяДатаСеанса(), "ДЛФ=ДД"));
		СписокЗамен.Добавить("<Nomer>;" + Объект.НомерДоговора);
		СписокЗамен.Добавить("<FIOchild>;" + Объект.ФИОРебенка);
		СписокЗамен.Добавить("<Address>;" + Объект.Адрес);
		СписокЗамен.Добавить("<DateBeg>;" + Формат(Объект.ДатаНачала, НСтр("ru='ДФ=''дд.ММ.гггг'''")));
		СписокЗамен.Добавить("<DateEnd>;" + Формат(Объект.ДатаОкончания, НСтр("ru='ДФ=''дд.ММ.гггг'''")));
		СписокЗамен.Добавить("<Srok>;" + КоличествоМесяцев);
		СписокЗамен.Добавить("<FIOParentInicial>;" + ПреобразованноеФИО);
		
		// Данные для первой строки
		СписокЗамен.Добавить("<NameDOP>;" + НаименованиеДОП1);
		СписокЗамен.Добавить("<FormOb>;" + ФормаОбучения1);
		СписокЗамен.Добавить("<Napravl>;" + Направленность1);
		СписокЗамен.Добавить("<SumOne>;" + Стоимость1);
		СписокЗамен.Добавить("<HoursWeek>;" + КоличествоЧасовВНеделю1);
		СписокЗамен.Добавить("<HoursYear>;" + ЧасовВГод1);
		СписокЗамен.Добавить("<SumOneProp>;" + ЧислоПрописьюБезНоля(Стоимость1));
		СписокЗамен.Добавить("<SumMounth>;" + СуммаВМесяц1);
		СписокЗамен.Добавить("<SumMounthProp>;" + ЧислоПрописьюБезНоля(СуммаВМесяц1));
		СписокЗамен.Добавить("<SumYear>;" + СуммаВГод1);
		СписокЗамен.Добавить("<SumYearProp>;" + ЧислоПрописьюБезНоля(СуммаВГод1));
		
		Если Объект.ТабДок.Количество() = 2 Тогда
			СписокЗамен.Добавить("<NameDOP2>;" + НаименованиеДОП2);
			СписокЗамен.Добавить("<FormOb2>;" + ФормаОбучения2);
			СписокЗамен.Добавить("<Napravl2>;" + Направленность2);
			СписокЗамен.Добавить("<SumOne2>;" + Стоимость2);
			СписокЗамен.Добавить("<HoursWeek2>;" + КоличествоЧасовВНеделю2);
			СписокЗамен.Добавить("<HoursYear2>;" + ЧасовВГод2);
			СписокЗамен.Добавить("<SumOneProp2>;" + ЧислоПрописьюБезНоля(Стоимость2));
			СписокЗамен.Добавить("<SumMounth2>;" + СуммаВМесяц2);
			СписокЗамен.Добавить("<SumMounthProp2>;" + ЧислоПрописьюБезНоля(СуммаВМесяц2));
			СписокЗамен.Добавить("<SumYear2>;" + СуммаВГод2);
			СписокЗамен.Добавить("<SumYearProp2>;" + ЧислоПрописьюБезНоля(СуммаВГод2));
		КонецЕсли;
		
		// Выполняем замены
		Для Каждого СтрокаЗамены Из СписокЗамен Цикл
			Части = СтрРазделить(СтрокаЗамены, ";");
			Шаблон = Части[0];
			Значение = Части[1];
			
			// Заменяем все вхождения шаблона
			Пока Истина Цикл
				Найдено = Документ.Content.Find.Execute(Шаблон,Ложь,Истина,Ложь,, ,Истина,,Ложь,Значение);
				Если Не Найдено Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		// Показываем результат
		MSWord.Application.Visible = Истина;
		MSWord.Activate();
		
	Исключение
		//Сообщение = Новый СообщениеПользователю();
		//Сообщение.Текст = НСтр("ru = 'Ошибка при формировании договора.'");
		//Сообщение.Сообщить();
		ТекстОшибки = 
		"Ошибка при формировании договора:
		|" + ОписаниеОшибки() + "
		|Стек вызовов:
		|" + Строка(ИнформацияОбОшибке());
		
		Сообщить(ТекстОшибки, СтатусСообщения.Важное);
		Попытка
			Если MSWord <> Неопределено Тогда
				MSWord.Application.Quit();
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецПопытки;  
КонецПроцедуры 

#Область ПечатьКлиентСервер
&НаКлиенте
Процедура СформироватьКлиентСервер(Команда)
	ОповещениеКаталог = Новый ОписаниеОповещения("СформироватьКлиентСерверПродолжение", ЭтотОбъект);
	НачатьПолучениеКаталогаВременныхФайлов(ОповещениеКаталог);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьКлиентСерверПродолжение(Результат, Параметры) Экспорт
	
	// Получаем нужный макет договора
	Если ПустаяСтрока(Объект.ФИОРебенка) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Укажите ФИО ребенка для формирования договора на оказание платных услуг'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если Объект.ТабДок.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Укажите хотя бы одну ДОП для формирования договора на оказание платных услуг ребенку'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если Объект.ТабДок.Количество() = 1 Тогда
		ИмяМакета = "Договор1ДД";
	ИначеЕсли Объект.ТабДок.Количество() = 2 Тогда
		ИмяМакета = "Договор2ДД";
	Иначе 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Невозможно определить макет договора'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Каталог = Результат;		//КаталогВременныхФайлов(); 
	Каталог = ?(Прав(Каталог,1) = "\", Каталог, Каталог+"\");
	ПолноеИмяФайла = Каталог+"Договор_"+Объект.НомерДоговора+".docx";
	
	Попытка
		АдресХранилища = ПолучитьМакетСКлиентаНаСервере(ИмяМакета);
		МакетДоговораДД = ПолучитьИзВременногоХранилища(АдресХранилища);
		МакетДоговораДД.Записать(ПолноеИмяФайла);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Попытка
		MSWord = Новый COMОбъект("Word.Application");
	Исключение
		Сообщить("Ошибка при попытке создать объект ""MS Word""!" + Символы.ПС + 
		"Возможно приложение ""MS Word"" не установлено или установлено неправильно.", СтатусСообщения.Внимание);
	КонецПопытки;
	
	Попытка
		Документ = MSWord.Documents.Open(ПолноеИмяФайла); 
	Исключение
		// Если произойдет ошибка, выводятся данные об ошибке, и объект закрывается.
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		
		MSWord.Application.Quit();
		
		Возврат;
	КонецПопытки;
	//*******************************************
	// выполняем замены
	Попытка
		// Получаем данные из первой строки табличной части
		ПерваяСтрока = Объект.ТабДок[0];
		НаименованиеДОП1 = ПерваяСтрока.НаименованиеДОП;
		ФормаОбучения1 = ПерваяСтрока.ФормаОбучения;
		Направленность1 = ПерваяСтрока.Направленность;
		Стоимость1 = ПерваяСтрока.СтоимостьОдногоЗанятия;
		КоличествоЧасовВНеделю1 = ПерваяСтрока.КоличествоЧасовВНеделю;
		КоличествоМесяцев = КоличествоМесяцевМеждуДатами(Объект.ДатаНачала, Объект.ДатаОкончания);
		ПреобразованноеФИО = ПреобразоватьФИО(Объект.ФИОРодителя);
		
		// Рассчитываем значения для первой строки
		ЧасовВГод1 = КоличествоЧасовВНеделю1 * КоличествоМесяцев * 4;
		СуммаВМесяц1 = Стоимость1 * КоличествоЧасовВНеделю1 * 4;
		СуммаВГод1 = Стоимость1 * ЧасовВГод1;
		
		// Если есть вторая строка - получаем ее данные
		Если Объект.ТабДок.Количество() = 2 Тогда
			ВтораяСтрока = Объект.ТабДок[1];
			НаименованиеДОП2 = ВтораяСтрока.НаименованиеДОП;
			ФормаОбучения2 = ВтораяСтрока.ФормаОбучения;
			Направленность2 = ВтораяСтрока.Направленность;
			Стоимость2 = ВтораяСтрока.СтоимостьОдногоЗанятия;
			КоличествоЧасовВНеделю2 = ВтораяСтрока.КоличествоЧасовВНеделю;
			
			ЧасовВГод2 = КоличествоЧасовВНеделю2 * КоличествоМесяцев * 4;
			СуммаВМесяц2 = Стоимость2 * КоличествоЧасовВНеделю2 * 4;
			СуммаВГод2 = Стоимость2 * ЧасовВГод2;
		КонецЕсли;
		
		СписокЗамен = Новый Массив;
		СписокЗамен.Добавить("<FIOParent>;" + Объект.ФИОРодителя);
		СписокЗамен.Добавить("<Date>;" + Формат(ТекущаяДата(), "ДЛФ=ДД"));
		СписокЗамен.Добавить("<Nomer>;" + Объект.НомерДоговора);
		СписокЗамен.Добавить("<FIOchild>;" + Объект.ФИОРебенка);
		СписокЗамен.Добавить("<Address>;" + Объект.Адрес);
		СписокЗамен.Добавить("<DateBeg>;" + Формат(Объект.ДатаНачала, НСтр("ru='ДФ=''дд.ММ.гггг'''")));
		СписокЗамен.Добавить("<DateEnd>;" + Формат(Объект.ДатаОкончания, НСтр("ru='ДФ=''дд.ММ.гггг'''")));
		СписокЗамен.Добавить("<Srok>;" + КоличествоМесяцев);
		СписокЗамен.Добавить("<FIOParentInicial>;" + ПреобразованноеФИО);
		
		// Данные для первой строки
		СписокЗамен.Добавить("<NameDOP>;" + НаименованиеДОП1);
		СписокЗамен.Добавить("<FormOb>;" + ФормаОбучения1);
		СписокЗамен.Добавить("<Napravl>;" + Направленность1);
		СписокЗамен.Добавить("<SumOne>;" + Стоимость1);
		СписокЗамен.Добавить("<HoursWeek>;" + КоличествоЧасовВНеделю1);
		СписокЗамен.Добавить("<HoursYear>;" + ЧасовВГод1);
		СписокЗамен.Добавить("<SumOneProp>;" + ЧислоПрописьюБезНоля(Стоимость1));
		СписокЗамен.Добавить("<SumMounth>;" + СуммаВМесяц1);
		СписокЗамен.Добавить("<SumMounthProp>;" + ЧислоПрописьюБезНоля(СуммаВМесяц1));
		СписокЗамен.Добавить("<SumYear>;" + СуммаВГод1);
		СписокЗамен.Добавить("<SumYearProp>;" + ЧислоПрописьюБезНоля(СуммаВГод1));
		
		Если Объект.ТабДок.Количество() = 2 Тогда
			СписокЗамен.Добавить("<NameDOP2>;" + НаименованиеДОП2);
			СписокЗамен.Добавить("<FormOb2>;" + ФормаОбучения2);
			СписокЗамен.Добавить("<Napravl2>;" + Направленность2);
			СписокЗамен.Добавить("<SumOne2>;" + Стоимость2);
			СписокЗамен.Добавить("<HoursWeek2>;" + КоличествоЧасовВНеделю2);
			СписокЗамен.Добавить("<HoursYear2>;" + ЧасовВГод2);
			СписокЗамен.Добавить("<SumOneProp2>;" + ЧислоПрописьюБезНоля(Стоимость2));
			СписокЗамен.Добавить("<SumMounth2>;" + СуммаВМесяц2);
			СписокЗамен.Добавить("<SumMounthProp2>;" + ЧислоПрописьюБезНоля(СуммаВМесяц2));
			СписокЗамен.Добавить("<SumYear2>;" + СуммаВГод2);
			СписокЗамен.Добавить("<SumYearProp2>;" + ЧислоПрописьюБезНоля(СуммаВГод2));
		КонецЕсли;
		
		// Выполняем замены
		Для Каждого СтрокаЗамены Из СписокЗамен Цикл
			Части = СтрРазделить(СтрокаЗамены, ";");
			Шаблон = Части[0];
			Значение = Части[1];
			Найдено = Документ.Content.Find.Execute(Шаблон,Ложь,Истина,Ложь,, ,Истина,,Ложь,Значение, 2);
		КонецЦикла;
		
	Исключение
		ТекстОшибки = 
		"Ошибка при формировании договора:
		|" + ОписаниеОшибки() + "
		|По причине:
		|" + Строка(ИнформацияОбОшибке());
		
		Сообщить(ТекстОшибки, СтатусСообщения.Важное);
	КонецПопытки;  
	
	// Делаем видимым приложение и активизируем его.
	MSWord.Application.Visible = Истина;
	Документ.Activate();
КонецПроцедуры 

//получаем макет на сервере и передаем на клиента через хранилище
&НаСервереБезКонтекста
Функция ПолучитьМакетСКлиентаНаСервере(ИмяМакета)
	Возврат ПоместитьВоВременноеХранилище(Документы.ДоговорНаОказаниеПлатныхУслуг.ПолучитьМакет(ИмяМакета));
КонецФункции
#КонецОбласти