// @strict-types

#Область Команды

 &НаКлиенте
Процедура ЗаполнитьСписокДетей(Команда)
	ЗаполнитьСписокДетейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьПриказ();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытий
&НаКлиенте
Процедура СписокДетейПередУдалением(Элемент, Отказ)	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = НСтр("ru = 'Удаление строк запрещено.'");
	Сообщение.Сообщить();
	Отказ = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура СписокДетейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = НСтр("ru = 'Добавление строк запрещено, только перезаполнить возможно.'");
	Сообщение.Сообщить();	
	Отказ = Истина;
КонецПроцедуры
#КонецОбласти


&НаСервере
Процедура ЗаполнитьСписокДетейНаСервере()
	
	Объект.СписокДетей.Очистить();
	ЗапросДОП = Новый Запрос;
	ЗапросДОП.Текст = "ВЫБРАТЬ Ссылка КАК ДОП ИЗ Справочник.ДОП";
	СписокДОП = ЗапросДОП.Выполнить().Выгрузить().ВыгрузитьКолонку("ДОП");
	
	ТаблицаРезультатов = Новый ТаблицаЗначений;
	ТаблицаРезультатов.Колонки.Добавить("ФИОРебенка", Новый ОписаниеТипов("СправочникСсылка.Дети"));
	
	Для Каждого ДОП Из СписокДОП Цикл
		ЗапросОтчисленных = Новый Запрос;
		ЗапросОтчисленных.Текст = 
		"ВЫБРАТЬ
		|	УслугиДОППоДетям.Ребенок КАК Ребенок
		|ИЗ
		|	РегистрСведений.УслугиДОППоДетям.СрезПоследних КАК УслугиДОППоДетям
		|ГДЕ
		|	УслугиДОППоДетям.Услуга.Владелец = &ДОП
		|	И УслугиДОППоДетям.Операция = &ОперацияОтчисление";
		
		ЗапросОтчисленных.УстановитьПараметр("ДОП", ДОП);
		ЗапросОтчисленных.УстановитьПараметр("ОперацияОтчисление", Перечисления.ОперацииУслуг.Отчисление);
		ОтчисленныеДети = ЗапросОтчисленных.Выполнить().Выгрузить().ВыгрузитьКолонку("Ребенок");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УслугиДОППоДетям.Ребенок КАК ФИОРебенка
		|ИЗ
		|	РегистрСведений.УслугиДОППоДетям.СрезПоследних КАК УслугиДОППоДетям
		|ГДЕ
		|	УслугиДОППоДетям.Услуга.Владелец = &ДОП
		|	И УслугиДОППоДетям.Операция = &ОперацияЗачисление
		|	И НЕ УслугиДОППоДетям.Ребенок В (&ОтчисленныеДети)";
		
		Запрос.УстановитьПараметр("ДОП", ДОП);
		Запрос.УстановитьПараметр("ОперацияЗачисление", Перечисления.ОперацииУслуг.Зачисление);
		Запрос.УстановитьПараметр("ОтчисленныеДети", ОтчисленныеДети);
		
		Попытка
			Результат = Запрос.Выполнить();
			
			Если Не Результат.Пустой() Тогда
				Выборка = Результат.Выбрать();
				Пока Выборка.Следующий() Цикл
					НайденыСтроки = ТаблицаРезультатов.НайтиСтроки(Новый Структура("ФИОРебенка", Выборка.ФИОРебенка));
					Если НайденыСтроки.Количество() = 0 Тогда
						НоваяСтрока = ТаблицаРезультатов.Добавить();
						НоваяСтрока.ФИОРебенка = Выборка.ФИОРебенка;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		Исключение
			
			ТекстСообщения = НСтр("ru = 'Ошибка при обработке ДОП ""%1"": %2.'");
			СообщениеОшибка = СтрШаблон(ТекстСообщения, ДОП.Наименование, ОписаниеОшибки());
			Сообщить(СообщениеОшибка);
		КонецПопытки;
	КонецЦикла;
	
	ТаблицаРезультатов.Сортировать("ФИОРебенка");
	Для Каждого СтрокаРезультат Из ТаблицаРезультатов Цикл
		НовСтр = Объект.СписокДетей.Добавить();
		НовСтр.ФИОРебенка = СтрокаРезультат.ФИОРебенка;
	КонецЦикла;
	
	Если Объект.СписокДетей.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Дети с активными платными услугами не найдены.'");
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПриказ()
	Если ПустаяСтрока(Объект.НомерПриказа) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не заполнен номер приказа'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.ДатаОтчисления) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не заполнена дата отчисления'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Приказ = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПриказОбОтчислении");
	MSWord = Неопределено;
	
	Попытка
		MSWord = Приказ.Получить();
		Документ = MSWord.Application.Documents(1);
		
		СписокЗамен = Новый Массив;
		СписокЗамен.Добавить("<Date>;" + Формат(ТекущаяДатаСеанса(), "ДФ='дд.ММ.гггг'"));
		СписокЗамен.Добавить("<Nomer>;" + Объект.НомерПриказа);
		СписокЗамен.Добавить("<DateOtch>;" + Формат(Объект.ДатаОтчисления, "ДФ='дд.ММ.гггг'"));
		
		Для Каждого Замена Из СписокЗамен Цикл
			Части = СтрРазделить(Замена, ";");
			Документ.Content.Find.Execute(Части[0],Ложь,Ложь,Ложь,Ложь,Ложь,Истина,1,Ложь,Части[1],2);
		КонецЦикла;
		
		Попытка
			Если Документ.Bookmarks.Exists("СписокДетей") Тогда
				Диапазон = Документ.Bookmarks("СписокДетей").Range;
				Диапазон.Text = "";
				Для Каждого Ребенок Из Объект.СписокДетей Цикл
					Диапазон.InsertAfter(Строка(Ребенок.НомерСтроки) + ". " + Ребенок.ФИОРебенка);
					Диапазон.InsertParagraphAfter();
					Диапазон.Collapse(0);
				КонецЦикла;
				Документ.Bookmarks.Add("СписокДетей", Диапазон);
			Иначе
				ТекстСообщения = НСтр("ru = 'Не найдена закладка ""%1"" в шаблоне!'");
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = СтрШаблон(ТекстСообщения, "СписокДетей");
				Сообщение.Сообщить();
			КонецЕсли;
		Исключение
			ТекстСообщения = НСтр("ru = 'Ошибка при вставке списка: %1.'");
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = СтрШаблон(ТекстСообщения, ОписаниеОшибки());
			Сообщение.Сообщить();
			
		КонецПопытки;
		MSWord.Application.Visible = Истина;
		MSWord.Activate();
		
	Исключение
		ТекстСообщения = НСтр("ru = 'Ошибка при формировании документа: %1.'");
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрШаблон(ТекстСообщения, ОписаниеОшибки());
		Сообщение.Сообщить();
		
		Попытка
			Если MSWord <> Неопределено Тогда
				MSWord.Application.Quit();
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецПопытки;	
КонецПроцедуры

#Область ПечатьКлиентСервер
&НаКлиенте
Процедура СформироватьКлиентСервер(Команда)	
	ОповещениеКаталог = Новый ОписаниеОповещения("СформироватьКлиентСерверПродолжение", ЭтотОбъект);
	НачатьПолучениеКаталогаВременныхФайлов(ОповещениеКаталог);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьКлиентСерверПродолжение(Результат, Параметры) Экспорт	
	// Получаем нужный макет договора
	Если ПустаяСтрока(Объект.НомерПриказа) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не заполнен номер приказа'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.ДатаОтчисления) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не заполнена дата отчисления'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
		ИмяМакета = "ПриказОбОтчисленииДД"; 
		
	Каталог = Результат;		//КаталогВременныхФайлов(); 
	Каталог = ?(Прав(Каталог,1) = "\", Каталог, Каталог+"\");
	ПолноеИмяФайла = Каталог+"Приказ об отчислении_"+Объект.НомерПриказа+".docx";
	
	Попытка
		АдресХранилища = ПолучитьМакетСКлиентаНаСервере(ИмяМакета);
		МакетПриказаОбОтчисленииДД = ПолучитьИзВременногоХранилища(АдресХранилища);
		МакетПриказаОбОтчисленииДД.Записать(ПолноеИмяФайла);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Попытка
		MSWord = Новый COMОбъект("Word.Application");
	Исключение
		Сообщить("Ошибка при попытке создать объект ""MS Word""!" + Символы.ПС + 
		"Возможно приложение ""MS Word"" не установлено или установлено неправильно.", СтатусСообщения.Внимание);
	КонецПопытки;
	
	Попытка
		Документ = MSWord.Documents.Open(ПолноеИмяФайла); 
	Исключение
		// Если произойдет ошибка, выводятся данные об ошибке, и объект закрывается.
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		
		MSWord.Application.Quit();
		
		Возврат;
	КонецПопытки;
	
	
	//*******************************************
	// выполняем замены
	Попытка	
		СписокЗамен = Новый Массив;
		СписокЗамен.Добавить("<Date>;" + Формат(ТекущаяДата(), "ДФ='дд.ММ.гггг'"));
		СписокЗамен.Добавить("<Nomer>;" + Объект.НомерПриказа);
		СписокЗамен.Добавить("<DateOtch>;" + Формат(Объект.ДатаОтчисления, "ДФ='дд.ММ.гггг'"));
		СписокЗамен.Добавить("<Date1>;" + Формат(Объект.ДатаОтчисления, "ДФ='дд.ММ.гггг'"));

		// Выполняем замены
		Для Каждого СтрокаЗамены Из СписокЗамен Цикл
			Части = СтрРазделить(СтрокаЗамены, ";");
			Шаблон = Части[0];
			Значение = Части[1];
			Найдено = Документ.Content.Find.Execute(Шаблон,Ложь,Истина,Ложь,, ,Истина,,Ложь,Значение, 2);
		КонецЦикла;
		Если Документ.Bookmarks.Exists("СписокДетей") Тогда
				Диапазон = Документ.Bookmarks("СписокДетей").Range;
				Диапазон.Text = "";
				Для Каждого Ребенок Из Объект.СписокДетей Цикл
					Диапазон.InsertAfter(Строка(Ребенок.НомерСтроки) + ". " + Ребенок.ФИОРебенка);
					Диапазон.InsertParagraphAfter();
					Диапазон.Collapse(0);
				КонецЦикла;
				Документ.Bookmarks.Add("СписокДетей", Диапазон);
			Иначе
				ТекстСообщения = НСтр("ru = 'Не найдена закладка ""%1"" в шаблоне!'");
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = СтрШаблон(ТекстСообщения, "СписокДетей");
				Сообщение.Сообщить();
			КонецЕсли;
	Исключение
		ТекстОшибки = 
		"Ошибка при формировании приказа об отчислении:
		|" + ОписаниеОшибки() + "
		|По причине:
		|" + Строка(ИнформацияОбОшибке());
		Сообщить(ТекстОшибки, СтатусСообщения.Важное);
	КонецПопытки;  
 // Делаем видимым приложение и активизируем его.
	MSWord.Application.Visible = Истина;
	Документ.Activate();
КонецПроцедуры 
//получаем макет на сервере и передаем на клиента через хранилище
&НаСервереБезКонтекста
Функция ПолучитьМакетСКлиентаНаСервере(ИмяМакета)
	Возврат ПоместитьВоВременноеХранилище(Документы.ПриказОбОтчислении.ПолучитьМакет(ИмяМакета));
КонецФункции
#КонецОбласти


&НаСервере
Процедура ЗаполнитьСУслугамиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УслугиДОППоДетямСрезПоследних.Ребенок КАК Ребенок,
		|	УслугиДОППоДетямСрезПоследних.Услуга КАК Услуга,
		|	УслугиДОППоДетямСрезПоследних.Операция КАК Операция,
		|	УслугиДОППоДетямСрезПоследних.Период КАК Период
		|ПОМЕСТИТЬ ВТ_ВсеПериоды
		|ИЗ
		|	РегистрСведений.УслугиДОППоДетям.СрезПоследних(&ДатаОтчисления, ) КАК УслугиДОППоДетямСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеПериоды.Ребенок КАК Ребенок,
		|	ВТ_ВсеПериоды.Услуга КАК Услуга,
		|	МАКСИМУМ(ВТ_ВсеПериоды.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПериодМакс
		|ИЗ
		|	ВТ_ВсеПериоды КАК ВТ_ВсеПериоды
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсеПериоды.Ребенок,
		|	ВТ_ВсеПериоды.Услуга
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПериодМакс.Ребенок КАК Ребенок,
		|	ВТ_ПериодМакс.Услуга КАК Услуга,
		|	ВТ_ПериодМакс.Период КАК Период,
		|	ВТ_ВсеПериоды.Операция КАК Операция
		|ПОМЕСТИТЬ ВТ_ПоследниеОперации
		|ИЗ
		|	ВТ_ПериодМакс КАК ВТ_ПериодМакс
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеПериоды КАК ВТ_ВсеПериоды
		|		ПО (ВТ_ВсеПериоды.Ребенок = ВТ_ПериодМакс.Ребенок)
		|			И (ВТ_ВсеПериоды.Услуга = ВТ_ПериодМакс.Услуга)
		|			И (ВТ_ВсеПериоды.Период = ВТ_ПериодМакс.Период)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПоследниеОперации.Ребенок КАК ФИОРебенка,
		|	МАКСИМУМ(ВТ_ПоследниеОперации.Услуга) КАК Услуга,
		|	МАКСИМУМ(ВТ_ПоследниеОперации.Период) КАК Период,
		|	МАКСИМУМ(ВТ_ПоследниеОперации.Операция) КАК Операция
		|ИЗ
		|	ВТ_ПоследниеОперации КАК ВТ_ПоследниеОперации
		|ГДЕ
		|	ВТ_ПоследниеОперации.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииУслуг.Зачисление)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПоследниеОперации.Ребенок
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФИОРебенка";
	
	Запрос.УстановитьПараметр("ДатаОтчисления", Объект.ДатаОтчисления);	
	РезультатЗапроса = Запрос.Выполнить();	
	Объект.СписокДетей.Очистить();	
	Если РезультатЗапроса.Пустой() Тогда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Дети с активными платными услугами не найдены.'");
		Сообщение.Сообщить();		
		Возврат;
	КонецЕсли;			
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрокаТЧ = Объект.СписокДетей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	Объект.СписокДетей.Сортировать("ФИОРебенка");
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = НСтр("ru = 'Заполнение выполнено.'");
	Сообщение.Сообщить();	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьСУслугами(Команда)
	
	Если Объект.Проведен Тогда 		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Заполнение возможно только для непроведенного документа.'");
		Сообщение.Сообщить();		
		Возврат;		
	КонецЕсли;	
	
	Если Объект.СписокДетей.Количество() > 0 Тогда 
		ОповещениеЗаполнить = Новый ОписаниеОповещения("ЗаполнитьСУслугамиПродолжить", ЭтотОбъект);
		ПоказатьВопрос(ОповещениеЗаполнить, "Список детей не пуст. Перезаполнить?", РежимДиалогаВопрос.ДаНет);	
	Иначе 
		ЗаполнитьСУслугамиНаСервере();	
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСУслугамиПродолжить(Результат, Параметры) Экспорт 
	Если Результат = КодВозвратаДиалога.Да Тогда
        ЗаполнитьСУслугамиНаСервере();	
    КонецЕсли;		
КонецПроцедуры
