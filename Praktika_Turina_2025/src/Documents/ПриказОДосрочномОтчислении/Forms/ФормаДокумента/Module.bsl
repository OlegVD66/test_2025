#Область Команды

 &НаКлиенте
Процедура Сформировать(Команда)
    СформироватьПриказ();
КонецПроцедуры

 &НаКлиенте
Процедура Выбрать(Команда)
	    ТекСтрокаТЧ = Элементы.ТабДок.ТекущиеДанные;
		Объект.ПлатнаяУслуга = ТекСтрокаТЧ.ПлатнаяУслуга;
		Объект.ДОП = ТекСтрокаТЧ.ДополнительнаяОбщеобразовательнаяПрограмма;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий
&НаКлиенте
Процедура ФИОРебенкаПриИзменении(Элемент)
	Объект.ФИОРодителя = ПолучитьФИОРодителяНаСервере(Объект.ФИОРебенка);
	Если ЗначениеЗаполнено(Объект.ФИОРебенка)И Объект.ТабДок.Количество() = 0 Тогда
		ЗаполнитьПлатныеУслугиНаСервере(Объект.ФИОРебенка);
	Иначе 
		Если Объект.ТабДок.Количество() > 0 Тогда 
			Объект.ТабДок.Очистить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабДокПлатнаяУслугаПриИзменении(Элемент)
    Если Объект.ТабДок.Количество() > 0 Тогда
        Для Каждого Строка Из Объект.ТабДок Цикл
            ПлатнаяУслуга = Строка.ПлатнаяУслуга;          
            Строка.ДополнительнаяОбщеобразовательнаяПрограмма = ПлатнаяУслуга.Владелец;
        КонецЦикла;
    Иначе
        Сообщить("Список пуст.");
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабДокПередУдалением(Элемент, Отказ)	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = НСтр("ru = 'Удаление строк запрещено.'");
	Сообщение.Сообщить();	
	Отказ = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ТабДокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = НСтр("ru = 'Добавление строк запрещено, только перезаполнить возможно.'");
	Сообщение.Сообщить();	
	Отказ = Истина;
КонецПроцедуры
#КонецОбласти


#Область ПолучениеНаСервере
&НаСервереБезКонтекста
Функция ПолучитьФИОРодителяНаСервере(Знач ФИОРеб)
    Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	Дети.ФИОРодителя КАК ФИОРодителя
               |ИЗ
               |	Справочник.Дети КАК Дети
               |ГДЕ
               |	Дети.Ссылка = &ФИОРебенка";

    Запрос.УстановитьПараметр("ФИОРебенка", ФИОРеб);

    Результат = Запрос.Выполнить();

    Если Результат.Пустой() Тогда
        Возврат Неопределено;
    Иначе
        Выборка = Результат.Выбрать();
        Выборка.Следующий();
        Возврат Выборка.ФИОРодителя;
	КонецЕсли;
КонецФункции 
#КонецОбласти

&НаСервере
Процедура ЗаполнитьПлатныеУслугиНаСервере(ФИОРебенка)
    
    Объект.ТабДок.Очистить();

    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   УслугиДОППоДетямСрезПоследних.Ребенок КАК Ребенок,
    |   УслугиДОППоДетямСрезПоследних.Услуга КАК Услуга,
    |   УслугиДОППоДетямСрезПоследних.Операция КАК Операция,
    |   УслугиДОППоДетямСрезПоследних.Период КАК Период
    |ПОМЕСТИТЬ ВТ_ВсеПериоды
    |ИЗ
    |   РегистрСведений.УслугиДОППоДетям.СрезПоследних(, ) КАК УслугиДОППоДетямСрезПоследних
    |ГДЕ
    |   УслугиДОППоДетямСрезПоследних.Ребенок = &ФИОРебенка
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ВТ_ВсеПериоды.Ребенок КАК Ребенок,
    |   ВТ_ВсеПериоды.Услуга КАК Услуга,
    |   МАКСИМУМ(ВТ_ВсеПериоды.Период) КАК Период
    |ПОМЕСТИТЬ ВТ_ПериодМакс
    |ИЗ
    |   ВТ_ВсеПериоды КАК ВТ_ВсеПериоды
    |
    |СГРУППИРОВАТЬ ПО
    |   ВТ_ВсеПериоды.Ребенок,
    |   ВТ_ВсеПериоды.Услуга
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ВТ_ПериодМакс.Ребенок КАК Ребенок,
    |   ВТ_ПериодМакс.Услуга КАК Услуга,
    |   ВТ_ПериодМакс.Период КАК Период,
    |   ВТ_ВсеПериоды.Операция КАК Операция
    |ПОМЕСТИТЬ ВТ_ПоследниеОперации
    |ИЗ
    |   ВТ_ПериодМакс КАК ВТ_ПериодМакс
    |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеПериоды КАК ВТ_ВсеПериоды
    |       ПО (ВТ_ВсеПериоды.Ребенок = ВТ_ПериодМакс.Ребенок)
    |           И (ВТ_ВсеПериоды.Услуга = ВТ_ПериодМакс.Услуга)
    |           И (ВТ_ВсеПериоды.Период = ВТ_ПериодМакс.Период)
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ВТ_ПоследниеОперации.Услуга КАК Услуга,
    |   ВТ_ПоследниеОперации.Услуга.Владелец КАК ДОП
    |ИЗ
    |   ВТ_ПоследниеОперации КАК ВТ_ПоследниеОперации
    |ГДЕ
    |   ВТ_ПоследниеОперации.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииУслуг.Зачисление)";

    Запрос.УстановитьПараметр("ФИОРебенка", ФИОРебенка);

    Попытка
        Результат = Запрос.Выполнить();
        
        Если Не Результат.Пустой() Тогда
            Выборка = Результат.Выбрать();
            Пока Выборка.Следующий() Цикл
                НовСтр = Объект.ТабДок.Добавить();
                НовСтр.ПлатнаяУслуга = Выборка.Услуга;
                НовСтр.ДополнительнаяОбщеобразовательнаяПрограмма = Выборка.ДОП;
            КонецЦикла;
        Иначе
            Сообщение = Новый СообщениеПользователю();
            Сообщение.Текст = НСтр("ru = 'Активные платные услуги для ребенка не найдены.'");
            Сообщение.Сообщить();    
        КонецЕсли;
    Исключение
        Сообщить("Ошибка выполнения запроса: " + ОписаниеОшибки());
        Возврат;
    КонецПопытки;
КонецПроцедуры
&НаСервере
Процедура СформироватьПриказ()
    // Получаем нужный макет договора
    Если ПустаяСтрока(Объект.ФИОРебенка) Тогда
        Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = НСтр("ru = 'Укажите ФИО ребенка для формирования приказа на отчисление'");
        Сообщение.Сообщить();
        Возврат;
    КонецЕсли;
       Если ПустаяСтрока(Объект.НомерПриказа) Тогда
        Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = НСтр("ru = 'Укажите номер приказа'");
        Сообщение.Сообщить();
        Возврат;
    КонецЕсли;
    Если ПустаяСтрока(Объект.ДОП) Тогда
        Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = НСтр("ru = 'Выберите ДОП для отчисления ребенка'");
        Сообщение.Сообщить();
        Возврат;
	КонецЕсли;
	
        Договор = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПриказОДосрочномОтчислении");
	
    Попытка
        // Получаем объект Word из макета
        MSWord = Договор.Получить();
        Документ = MSWord.Application.Documents(1);
        
        СписокЗамен = Новый Массив;
        СписокЗамен.Добавить("<Date>;" + Формат(ТекущаяДатаСеанса(), НСтр("ru='ДФ=''дд.ММ.гггг'''")));
		СписокЗамен.Добавить("<Nomer>;" + Объект.НомерПриказа);
		СписокЗамен.Добавить("<FIOparent>;" + Объект.ФИОРодителя);
		СписокЗамен.Добавить("<NameDOP>;" + Объект.ДОП);
		СписокЗамен.Добавить("<DateProp>;" + Формат(ТекущаяДатаСеанса(), "ДЛФ=ДД"));
        СписокЗамен.Добавить("<FIOchild>;" + Объект.ФИОРебенка);
		ДатаЗавтра = Дата(Год(ТекущаяДатаСеанса()), Месяц(ТекущаяДатаСеанса()), День(ТекущаяДатаСеанса()) + 1);
		СписокЗамен.Добавить("<Date1>;" + Формат(ДатаЗавтра, НСтр("ru='ДФ=''дд.ММ.гггг'''")));
		СписокЗамен.Добавить("<Date1>;" + Формат(ДатаЗавтра, НСтр("ru='ДФ=''дд.ММ.гггг'''")));
       
        // Выполняем замены
        Для Каждого СтрокаЗамены Из СписокЗамен Цикл
            Части = СтрРазделить(СтрокаЗамены, ";");
            Шаблон = Части[0];
            Значение = Части[1];
            
            // Заменяем все вхождения шаблона
            Пока Истина Цикл
                Найдено = Документ.Content.Find.Execute(
                    Шаблон,    // FindText
                    Ложь,      // MatchCase
                    Истина,    // MatchWholeWord
                    Ложь,      // MatchWildcards
                    , ,        // MatchSoundsLike, MatchAllWordForms
                    Истина,    // Forward
                    ,          // Wrap
                    Ложь,      // Format
                    Значение   // ReplaceWith
                );
                
                Если Не Найдено Тогда
                    Прервать;
                КонецЕсли;
            КонецЦикла;
        КонецЦикла;
        
        // Показываем результат
        MSWord.Application.Visible = Истина;
        MSWord.Activate();
        
    Исключение
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Ошибка при формировании договора.'");
		Сообщение.Сообщить();
		//ТекстОшибки = 
		//"Ошибка при формировании договора:
		//|" + ОписаниеОшибки() + "
		//|Стек вызовов:
		//|" + Строка(ИнформацияОбОшибке());
		//
		//Сообщить(ТекстОшибки, СтатусСообщения.Важное);
        Попытка
            Если MSWord <> Неопределено Тогда
                MSWord.Application.Quit();
            КонецЕсли;
        Исключение
        КонецПопытки;
    КонецПопытки;  
КонецПроцедуры 

#Область ПечатьКлиентСервер
&НаКлиенте
Процедура СформироватьКлиентСервер(Команда)
	ОповещениеКаталог = Новый ОписаниеОповещения("СформироватьКлиентСерверПродолжение", ЭтотОбъект);
	НачатьПолучениеКаталогаВременныхФайлов(ОповещениеКаталог);	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьКлиентСерверПродолжение(Результат, Параметры) Экспорт	
	// Получаем нужный макет договора
    Если ПустаяСтрока(Объект.ФИОРебенка) Тогда
        Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = НСтр("ru = 'Укажите ФИО ребенка для формирования приказа на отчисление'");
        Сообщение.Сообщить();
        Возврат;
    КонецЕсли;
       Если ПустаяСтрока(Объект.НомерПриказа) Тогда
        Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = НСтр("ru = 'Укажите номер приказа'");
        Сообщение.Сообщить();
        Возврат;
    КонецЕсли;
    Если ПустаяСтрока(Объект.ДОП) Тогда
        Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = НСтр("ru = 'Выберите ДОП для отчисления ребенка'");
        Сообщение.Сообщить();
        Возврат;
	КонецЕсли;
	
		ИмяМакета = "ПриказОДосрочномОтчисленииДД"; 
		
	Каталог = Результат;		//КаталогВременныхФайлов(); 
	Каталог = ?(Прав(Каталог,1) = "\", Каталог, Каталог+"\");
	ПолноеИмяФайла = Каталог+"Приказ о досрочном отчислении_"+Объект.НомерПриказа+".docx";
	
	Попытка
		АдресХранилища = ПолучитьМакетСКлиентаНаСервере(ИмяМакета);
		МакетПриказаОДосрочномОтчисленииДД = ПолучитьИзВременногоХранилища(АдресХранилища);
		МакетПриказаОДосрочномОтчисленииДД.Записать(ПолноеИмяФайла);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Попытка
		MSWord = Новый COMОбъект("Word.Application");
	Исключение
		Сообщить("Ошибка при попытке создать объект ""MS Word""!" + Символы.ПС + 
		"Возможно приложение ""MS Word"" не установлено или установлено неправильно.", СтатусСообщения.Внимание);
	КонецПопытки;
	
	Попытка
		Документ = MSWord.Documents.Open(ПолноеИмяФайла); 
	Исключение
		// Если произойдет ошибка, выводятся данные об ошибке, и объект закрывается.
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		
		MSWord.Application.Quit();
		
		Возврат;
	КонецПопытки;	
	//*******************************************
	// выполняем замены
	Попытка	
				
		СписокЗамен = Новый Массив;
        СписокЗамен.Добавить("<Date>;" + Формат(ТекущаяДата(), НСтр("ru='ДФ=''дд.ММ.гггг'''")));
		СписокЗамен.Добавить("<Nomer>;" + Объект.НомерПриказа);
		СписокЗамен.Добавить("<FIOparent>;" + Объект.ФИОРодителя);
		СписокЗамен.Добавить("<NameDOP>;" + Объект.ДОП);
		СписокЗамен.Добавить("<DateProp>;" + Формат(ТекущаяДата(), "ДЛФ=ДД"));
        СписокЗамен.Добавить("<FIOchild>;" + Объект.ФИОРебенка);
		ДатаЗавтра = Дата(Год(ТекущаяДата()), Месяц(ТекущаяДата()), День(ТекущаяДата()) + 1);
		СписокЗамен.Добавить("<Date1>;" + Формат(ДатаЗавтра, НСтр("ru='ДФ=''дд.ММ.гггг'''")));
			
		// Выполняем замены
		Для Каждого СтрокаЗамены Из СписокЗамен Цикл
			Части = СтрРазделить(СтрокаЗамены, ";");
			Шаблон = Части[0];
			Значение = Части[1];
			Найдено = Документ.Content.Find.Execute(Шаблон,Ложь,Истина,Ложь,, ,Истина,,Ложь,Значение, 2);
		КонецЦикла;
		
	Исключение
		ТекстОшибки = 
		"Ошибка при формировании приказа о досрочном отчислении:
		|" + ОписаниеОшибки() + "
		|По причине:
		|" + Строка(ИнформацияОбОшибке());
		
		Сообщить(ТекстОшибки, СтатусСообщения.Важное);
	КонецПопытки;  
	
	// Делаем видимым приложение и активизируем его.
	MSWord.Application.Visible = Истина;
	Документ.Activate();
	
КонецПроцедуры 

//получаем макет на сервере и передаем на клиента через хранилище
&НаСервереБезКонтекста
Функция ПолучитьМакетСКлиентаНаСервере(ИмяМакета)
	Возврат ПоместитьВоВременноеХранилище(Документы.ПриказОДосрочномОтчислении.ПолучитьМакет(ИмяМакета));
КонецФункции
#КонецОбласти