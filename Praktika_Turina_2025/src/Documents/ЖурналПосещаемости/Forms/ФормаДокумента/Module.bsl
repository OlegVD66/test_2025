// комментарий из дев_18
#Область Команды
&НаКлиенте
Процедура ЗаполнитьГруппу(Команда)
	Если ЗначениеЗаполнено(Объект.НаименованиеДОП)Тогда
		ЗаполнитьГруппуНаСервере(Объект.НаименованиеДОП);
		ЗаполнитьОтсутствующиеДни();
		ЗаполнитьИтого();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Если НЕ ЗначениеЗаполнено(Объект.НаименованиеДОП) Тогда
			Сообщение.Текст = НСтр("ru = 'Выберите дополнительную общеобразовательную программу.'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытий
&НаКлиенте
Процедура СписокПосещенияДень1ПриИзменении(Элемент) 
	ЗаполнитьИтого();
КонецПроцедуры

&НаКлиенте
Процедура СписокПосещенияДень2ПриИзменении(Элемент)  
	ЗаполнитьИтого();
КонецПроцедуры

&НаКлиенте
Процедура СписокПосещенияДень3ПриИзменении(Элемент)
	ЗаполнитьИтого();
КонецПроцедуры

&НаКлиенте
Процедура СписокПосещенияДень4ПриИзменении(Элемент) 
	ЗаполнитьИтого();
КонецПроцедуры

&НаКлиенте
Процедура СписокПосещенияДень5ПриИзменении(Элемент)  
	ЗаполнитьИтого();
КонецПроцедуры

&НаКлиенте
Процедура СписокПосещенияДень6ПриИзменении(Элемент) 
	ЗаполнитьИтого();
КонецПроцедуры

&НаКлиенте
Процедура СписокПосещенияДень7ПриИзменении(Элемент) 
	ЗаполнитьИтого();
КонецПроцедуры

&НаКлиенте
Процедура СписокПосещенияДень8ПриИзменении(Элемент)
	ЗаполнитьИтого();
КонецПроцедуры   

&НаКлиенте
Процедура НаименованиеДОППриИзменении(Элемент)
	НаимДОП = Объект.НаименованиеДОП;
	Объект.КоличествоПлатныхУслуг = ПолучитьКоличествоПлатныхУслугНаСервере(НаимДОП);
КонецПроцедуры
// запрет удаления
&НаКлиенте
Процедура СписокПосещенияПередУдалением(Элемент, Отказ)
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = НСтр("ru = 'Удаление строк запрещено.'");
	Сообщение.Сообщить();
	Отказ = Истина;
КонецПроцедуры
//запрет добавления
&НаКлиенте
Процедура СписокПосещенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = НСтр("ru = 'Добавление строк запрещено, только перезаполнить возможно.'");
	Сообщение.Сообщить();
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ПередЗаписьюНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюНаКлиенте()
	ЗаполнитьИтого(); 
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ПередЗаписьюНаКлиенте();	
КонецПроцедуры
#КонецОбласти

#Область ПолучениеНаСервере
&НаСервереБезКонтекста
Функция ПолучитьПосещаемостьНаСервере()
	Возврат Перечисления.Посещаемость.Н;	
КонецФункции  

&НаСервереБезКонтекста
Функция ПолучитьКоличествоПлатныхУслугНаСервере(Знач НаимДОП)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Количество(ПлатныеУслуги.Ссылка) КАК Количество
	|ИЗ
	|	Справочник.ПлатныеУслуги КАК ПлатныеУслуги
	|ГДЕ
	|	ПлатныеУслуги.Владелец = &НаименованиеДОП";
	
	Запрос.УстановитьПараметр("НаименованиеДОП", НаимДОП);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Количество;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКоличествоЧасовВНеделюНаСервере(Знач НаимДОП)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПлатныеУслуги.КоличествоЧасовВНеделю КАК КоличествоЧасовВНеделю
	|ИЗ
	|	Справочник.ПлатныеУслуги КАК ПлатныеУслуги
	|ГДЕ
	|	ПлатныеУслуги.Владелец = &НаименованиеДОП";
	
	Запрос.УстановитьПараметр("НаименованиеДОП", НаимДОП);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.КоличествоЧасовВНеделю;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтоимостьЗаЗанятиеНаСервере(Знач НаимДоп, ДатаДокумента)
	
	ДатаПересчета = ?(ЗначениеЗаполнено(ДатаДокумента), НачалоДня(ДатаДокумента), ТекущаяДатаСеанса());
	РегЦеныНаДопУслуги = РегистрыСведений.ЦеныНаДопУслуги.ПолучитьПоследнее(ДатаПересчета,
	Новый Структура ("ДополнительнаяОбщеобразовательнаяПрограмма", НаимДоп));
	Возврат РегЦеныНаДопУслуги.ТарифЗаОдноЗанятие;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗатратыНаРебенкаНаСервере(Знач НаимДоп, ДатаДокумента)
	ДатаПересчета = ?(ЗначениеЗаполнено(ДатаДокумента), НачалоДня(ДатаДокумента), ТекущаяДатаСеанса());
	РегЗатратыНаРебенкаВМесяц = РегистрыСведений.ЗатратыНаРебенкаВМесяц.ПолучитьПоследнее(ДатаПересчета,
	Новый Структура ("ДополнительнаяОбщеобразовательнаяПрограмма", НаимДоп));
	Возврат РегЗатратыНаРебенкаВМесяц.ЗатратыНаРебенкаВМесяц;
КонецФункции
#КонецОбласти

&НаКлиенте
Процедура ЗаполнитьОтсутствующиеДни()
	НаимДОП = Объект.НаименованиеДОП;
	КолЧасов = ПолучитьКоличествоЧасовВНеделюНаСервере(НаимДОП);
	СтоимостьЗаЗанятие = ПолучитьСтоимостьЗаЗанятиеНаСервере(НаимДОП, Объект.Дата);
	Если КолЧасов = 1 Тогда
		Для Каждого Строка Из Объект.СписокПосещения Цикл
			Строка.День5 = ПолучитьПосещаемостьНаСервере();
			Строка.День6 = ПолучитьПосещаемостьНаСервере();
			Строка.День7 = ПолучитьПосещаемостьНаСервере();
			Строка.День8 = ПолучитьПосещаемостьНаСервере();
			РасчетСуммы.ПодсчетПустыхЗначений(Строка);
			РасчетСуммы.РассчитатьСуммуКОплате(Строка,СтоимостьЗаЗанятие);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИтого()
	НаимДОП = Объект.НаименованиеДОП;
	СтоимостьЗаЗанятие = ПолучитьСтоимостьЗаЗанятиеНаСервере(НаимДОП, Объект.Дата);
	Для Каждого Строка Из Объект.СписокПосещения Цикл
		РасчетСуммы.ПодсчетПустыхЗначений(Строка);
		РасчетСуммы.РассчитатьСуммуКОплате(Строка,СтоимостьЗаЗанятие);
	КонецЦикла;
	ЗатратыНаРебенка = ПолучитьЗатратыНаРебенкаНаСервере(Объект.НаименованиеДОП, Объект.Дата);
	РасчетСуммы.ПодсчетКоличестваДетодней(Объект.СписокПосещения, Объект.КоличествоДетодней);
	РасчетСуммы.РассчитатьСуммуДоплаты(Объект.КоличествоДетодней,ЗатратыНаРебенка, Объект.СуммаДоплатыПреподавателю);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГруппуНаСервере(ГруппаПоДОП)
	
	Объект.СписокПосещения.Очистить();
	 
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   УслугиДОППоДетямСрезПоследних.Ребенок КАК Ребенок,
    |   УслугиДОППоДетямСрезПоследних.Услуга КАК Услуга,
    |   УслугиДОППоДетямСрезПоследних.Операция КАК Операция,
    |   УслугиДОППоДетямСрезПоследних.Период КАК Период,
    |   УслугиДОППоДетямСрезПоследних.Ребенок.ВозрастнаяГруппа КАК ВозрастнаяГруппа
    |ПОМЕСТИТЬ ВТ_ВсеПериоды
    |ИЗ
    |   РегистрСведений.УслугиДОППоДетям.СрезПоследних(, ) КАК УслугиДОППоДетямСрезПоследних
    |ГДЕ
    |   УслугиДОППоДетямСрезПоследних.Услуга.Владелец = &ГруппаПоДОП
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ВТ_ВсеПериоды.Ребенок КАК Ребенок,
    |   ВТ_ВсеПериоды.Услуга КАК Услуга,
    |   ВТ_ВсеПериоды.ВозрастнаяГруппа КАК ВозрастнаяГруппа,
    |   МАКСИМУМ(ВТ_ВсеПериоды.Период) КАК Период
    |ПОМЕСТИТЬ ВТ_ПериодМакс
    |ИЗ
    |   ВТ_ВсеПериоды КАК ВТ_ВсеПериоды
    |
    |СГРУППИРОВАТЬ ПО
    |   ВТ_ВсеПериоды.Ребенок,
    |   ВТ_ВсеПериоды.Услуга,
    |   ВТ_ВсеПериоды.ВозрастнаяГруппа
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ВТ_ПериодМакс.Ребенок КАК Ребенок,
    |   ВТ_ПериодМакс.Услуга КАК Услуга,
    |   ВТ_ПериодМакс.ВозрастнаяГруппа КАК ВозрастнаяГруппа,
    |   ВТ_ПериодМакс.Период КАК Период,
    |   ВТ_ВсеПериоды.Операция КАК Операция
    |ПОМЕСТИТЬ ВТ_ПоследниеОперации
    |ИЗ
    |   ВТ_ПериодМакс КАК ВТ_ПериодМакс
    |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеПериоды КАК ВТ_ВсеПериоды
    |       ПО (ВТ_ВсеПериоды.Ребенок = ВТ_ПериодМакс.Ребенок)
    |           И (ВТ_ВсеПериоды.Услуга = ВТ_ПериодМакс.Услуга)
    |           И (ВТ_ВсеПериоды.Период = ВТ_ПериодМакс.Период)
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ВТ_ПоследниеОперации.Ребенок КАК ФИОРебенка,
    |   ВТ_ПоследниеОперации.ВозрастнаяГруппа КАК ВозрастнаяГруппа,
    |   МАКСИМУМ(ВТ_ПоследниеОперации.Услуга) КАК Услуга
    |ИЗ
    |   ВТ_ПоследниеОперации КАК ВТ_ПоследниеОперации
    |ГДЕ
    |   ВТ_ПоследниеОперации.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииУслуг.Зачисление)
    |
    |СГРУППИРОВАТЬ ПО
    |   ВТ_ПоследниеОперации.Ребенок,
    |   ВТ_ПоследниеОперации.ВозрастнаяГруппа
    |
    |УПОРЯДОЧИТЬ ПО
    |   ВозрастнаяГруппа,
    |   ФИОРебенка";

    Запрос.УстановитьПараметр("ГруппаПоДОП", ГруппаПоДОП);

    Попытка
        РезультатЗапроса = Запрос.Выполнить();
        
        Если РезультатЗапроса.Пустой() Тогда 
            Сообщение = Новый СообщениеПользователю();
            Сообщение.Текст = НСтр("ru = 'Дети с активными платными услугами не найдены.'");
            Сообщение.Сообщить();
            Возврат;
        КонецЕсли;
        
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            НоваяСтрокаТЧ = Объект.СписокПосещения.Добавить();
            НоваяСтрокаТЧ.ФИОРебенка = ВыборкаДетальныеЗаписи.ФИОРебенка;
            НоваяСтрокаТЧ.Группа = ВыборкаДетальныеЗаписи.ВозрастнаяГруппа;
        КонецЦикла;
        
    Исключение
        Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = НСтр("ru = 'Ошибка выполнения запроса: '" + ОписаниеОшибки());
        Сообщение.Сообщить(); 
        Возврат;
    КонецПопытки;
КонецПроцедуры





